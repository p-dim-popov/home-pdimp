{"version":3,"sources":["logo.svg","constants/index.js","components/App/index.jsx","reportWebVitals.js","index.jsx","components/App/index.module.css"],"names":["BASE_URL","APPS","Object","freeze","MEET_FE","name","url","MEET_BE","MORSKOGRAM","GOOGLE","apps","values","map","description","className","style","card","header","cardSize","App","app","src","logo","alt","main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log","module","exports"],"mappings":"8LAAe,MAA0B,iCCA5BA,EAAW,8BAKXC,EAAOC,OAAOC,OAAO,CAChCC,QAAS,CACPC,KAAM,aACNC,IAAI,GAAD,OAAKN,EAAL,UAELO,QAAS,CACPF,KAAM,qBACNC,IAAI,GAAD,OAAKN,EAAL,cAELQ,WAAY,CACVH,KAAM,aACNC,IAAK,oCAEPG,OAAQ,CACNJ,KAAM,SACNC,IAAI,GAAD,OAAKN,EAAL,c,uBCZDU,EAAOR,OAAOS,OAAOV,GAAMW,KAAI,gBAAGP,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKO,EAAd,EAAcA,YAAd,OACnC,qBAAKC,UAAWC,IAAMC,KAAtB,SACE,cAAC,gBAAD,CACEC,OAAQZ,EACRa,SAAS,QACTL,YAAaA,EACbP,IAAKA,SAKEa,EAAM,kBACjB,sBAAKL,UAAWC,IAAMK,IAAtB,UACE,wBAAQN,UAAWC,IAAME,OAAzB,SACE,qBAAKI,IAAKC,EAAMR,UAAWC,IAAMO,KAAMC,IAAI,WAE7C,sBAAMT,UAAWC,IAAMS,KAAvB,SACGd,QCXQe,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,EAAgBc,QAAQC,M,kBCfxBC,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,OAAS,oBAAoB,KAAO,kBAAkB,KAAO,kBAAkB,KAAO,qB","file":"static/js/main.aed983ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const BASE_URL = 'https://pdimp.herokuapp.com';\n\n/**\n * @type {Readonly<Object.<string, {name: string, url: string, description: string}>>}\n */\nexport const APPS = Object.freeze({\n  MEET_FE: {\n    name: 'Jitsi Meet',\n    url: `${BASE_URL}/meet`,\n  },\n  MEET_BE: {\n    name: 'Jitsi Meet Backend',\n    url: `${BASE_URL}/meet/api`,\n  },\n  MORSKOGRAM: {\n    name: 'MorskoGram',\n    url: 'https://morskogram.herokuapp.com',\n  },\n  GOOGLE: {\n    name: 'Google',\n    url: `${BASE_URL}/google`,\n  },\n});\n","import React from 'react';\nimport { ReactTinyLink } from 'react-tiny-link';\n\nimport logo from '../../logo.svg';\nimport { APPS } from '../../constants';\n\nimport style from './index.module.css';\n\nconst apps = Object.values(APPS).map(({ name, url, description }) => (\n  <div className={style.card}>\n    <ReactTinyLink\n      header={name}\n      cardSize=\"large\"\n      description={description}\n      url={url}\n    />\n  </div>\n));\n\nexport const App = () => (\n  <div className={style.app}>\n    <header className={style.header}>\n      <img src={logo} className={style.logo} alt=\"logo\" />\n    </header>\n    <main className={style.main}>\n      {apps}\n    </main>\n  </div>\n);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2-5_G\",\"logo\":\"App_logo__rKmqT\",\"header\":\"App_header__1GXHx\",\"link\":\"App_link__36FTx\",\"main\":\"App_main__2Xikc\",\"card\":\"App_card__15w2-\"};"],"sourceRoot":""}